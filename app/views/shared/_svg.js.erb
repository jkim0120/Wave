svg = true
trackerOffline = false

$(window).resize(resizeCanvas)
function resizeCanvas() {
  canvas.selectAll('*').remove()
  var canvasWidth = $('.canvas').width()
  if (trackerOffline) trackerStatus(canvasWidth, canvasHeight)
}

// SVG Script
var canvas = d3.select('.canvas'),
    canvasWidth = $('.canvas').width(),
    canvasHeight = $('.canvas').height(),
    pointer

function makeCircle(cx, cy, r) {
  var data = [{'x': cx, 'y': cy, 'r': r}]
  var circle =  canvas.selectAll('circle').data(data).enter().append('circle')
  circle.attr('cx', function(d) { return d.x })
        .attr('cy', function(d) { return d.y })
        .attr('r', function(d) { return d.r })
        .attr('fill', 'red')
  return circle
}

function trackerStatus(width, height) {
  trackerOffline = true

  var status = canvas.append('text')
  status.text('Your Wave Motion seems to be asleep')
        .attr('class', 'canvas-status')
        .attr('x', width / 2)
        .attr('y', height / 2)
        .style('text-anchor', 'middle')
}

// Tracker Script
var waveTracker = function(e) {
  var rawData = JSON.parse(e.data)
  var parsedData = JSON.parse(rawData.data)
  $('.x').html(parsedData.X)
  $('.y').html(parsedData.Y)
  $('.size').html(parsedData.Size)
  var x = canvasWidth * parsedData.X / 1000,
      y = canvasHeight * parsedData.Y / 800,
      r = parsedData.Size * 7

  if (pointer === undefined) pointer = makeCircle(x, y, r)

  pointer.transition().attr('cx', x).attr('cy', y).attr('r', r).ease('cubic-in')
}